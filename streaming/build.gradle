plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.sloscout'
version = '1.0.0'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/snapshots/"
    }
}

ext {
    flinkVersion = '1.18.0'
    kafkaVersion = '3.5.0'
    avroVersion = '1.11.3'
    slf4jVersion = '2.0.9'
    junitVersion = '5.10.0'
}

dependencies {
    // Flink core
    implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
    implementation "org.apache.flink:flink-clients:${flinkVersion}"
    implementation "org.apache.flink:flink-connector-base:${flinkVersion}"

    // Kafka connector
    implementation "org.apache.flink:flink-connector-kafka:3.0.1-1.18"
    implementation "org.apache.kafka:kafka-clients:${kafkaVersion}"

    // Avro
    implementation "org.apache.avro:avro:${avroVersion}"
    implementation "org.apache.flink:flink-avro:${flinkVersion}"

    // State backend
    implementation "org.apache.flink:flink-statebackend-rocksdb:${flinkVersion}"

    // Logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.apache.flink:flink-test-utils:${flinkVersion}"
    testImplementation "org.testcontainers:testcontainers:1.19.1"
    testImplementation "org.testcontainers:kafka:1.19.1"
    testImplementation "org.mockito:mockito-core:5.5.0"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

shadowJar {
    archiveBaseName.set('slo-scout-streaming')
    archiveClassifier.set('')
    mergeServiceFiles()

    manifest {
        attributes(
            'Main-Class': 'com.sloscout.FingerprintingJob'
        )
    }

    // Exclude signed jars to avoid security exceptions
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

application {
    mainClass = 'com.sloscout.FingerprintingJob'
}
