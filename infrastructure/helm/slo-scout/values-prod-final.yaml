# Production values - ВСЕ компоненты по 1 реплике
global:
  imageRegistry: docker.io
  security:
    allowInsecureImages: true

networkPolicy:
  enabled: false

frontend:
  enabled: true
  replicaCount: 1
  image:
    repository: sloscout/frontend
    tag: latest
    pullPolicy: Always
  service:
    type: NodePort
    port: 80
    nodePort: 30080
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi

backend:
  enabled: true
  replicaCount: 1
  image:
    repository: sloscout/backend
    tag: prod
    pullPolicy: Always
  database:
    passwordSecret:
      name: slo-scout-timescaledb
      key: password
  storage:
    accessKeySecret:
      name: slo-scout-minio-credentials
      key: accessKey
    secretKeySecret:
      name: slo-scout-minio-credentials
      key: secretKey
  llm:
    provider: "openai"
    endpoint: "https://openrouter.ai/api/v1"
    model: "anthropic/claude-3.5-sonnet"
    apiKeySecret:
      name: slo-scout-llm-credentials
      key: apiKey
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: false

collectors:
  prometheus:
    enabled: true
    replicaCount: 1
    image:
      repository: sloscout/prometheus-collector
      tag: latest
      pullPolicy: Always
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

  otlp:
    enabled: true
    replicaCount: 1
    image:
      repository: sloscout/otlp-collector
      tag: latest
      pullPolicy: Always
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    autoscaling:
      enabled: false

  log:
    enabled: true
    image:
      repository: sloscout/log-collector
      tag: latest
      pullPolicy: Always
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

flink:
  enabled: true
  jobmanager:
    enabled: true
    replicaCount: 1
    image:
      repository: sloscout/flink-jobmanager
      tag: "1.18.0"
      pullPolicy: Always
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

  taskmanager:
    enabled: true
    replicaCount: 1
    image:
      repository: sloscout/flink-taskmanager
      tag: "1.18.0"
      pullPolicy: Always
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    autoscaling:
      enabled: false

  jobs:
    fingerprinting:
      enabled: true
      image:
        repository: sloscout/fingerprinting-job
        tag: latest
        pullPolicy: Always

kafka:
  enabled: false

customKafka:
  enabled: true
  image: confluentinc/cp-kafka:7.5.0
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

timescaledb:
  enabled: true
  image:
    registry: docker.io
    repository: bitnamilegacy/postgresql
    tag: 16.0.0
  auth:
    username: slo_scout
    password: slo_scout_dev
    database: slo_scout
  primary:
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 300m
        memory: 512Mi
    extendedConfiguration: |
      max_connections = 200

externalS3:
  endpoint: "http://slo-scout-minio:9000"
  bucket: "slo-scout"
  region: "us-east-1"
  accessKeyId: "minioadmin"
  secretAccessKey: "minioadmin"
  useSSL: false

externalMilvus:
  host: "slo-scout-milvus"
  port: 19530

minio:
  enabled: true
  mode: standalone
  replicas: 1
  persistence:
    enabled: false
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  buckets:
    - name: slo-scout
      policy: none
      purge: false

milvus:
  enabled: true
  cluster:
    enabled: false
  standalone:
    enabled: true
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  persistence:
    enabled: false
  # Disable built-in MinIO (using external MinIO)
  minio:
    enabled: false
  # Use external MinIO
  externalS3:
    enabled: true
    host: slo-scout-minio
    port: 9000
    useSSL: false
    bucketName: slo-scout
    rootPath: milvus
    useIAM: false
    accessKey: minioadmin
    secretKey: minioadmin

prometheus:
  enabled: true
  server:
    enabled: true
    persistentVolume:
      enabled: false
    resources:
      requests:
        memory: "512Mi"
        cpu: "200m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    retention: "7d"
  alertmanager:
    enabled: false

grafana:
  enabled: true
  replicas: 1
  persistence:
    enabled: false
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  adminUser: admin
  adminPassword: "slo_scout_admin"

loki:
  enabled: true
  loki:
    auth_enabled: false
    server:
      http_listen_port: 3100
    limits_config:
      retention_period: 168h  # 7 days
  read:
    replicas: 1
    persistence:
      enabled: false
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "200m"
  write:
    replicas: 1
    persistence:
      enabled: false
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "200m"
  backend:
    replicas: 1
    persistence:
      enabled: false
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "200m"
  networkPolicy:
    enabled: false

podDisruptionBudget:
  enabled: false

serviceMonitor:
  enabled: false

podMonitor:
  enabled: false

secrets:
  slo-scout-db-credentials:
    password: slo_scout_dev
  slo-scout-llm-credentials:
    apiKey: "OPENROUTER_API_KEY_PLACEHOLDER"  # Replace with actual OpenRouter API key
  slo-scout-minio-credentials:
    accessKey: "minioadmin"
    secretKey: "minioadmin"
